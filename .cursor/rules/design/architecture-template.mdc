---
description: 
globs: 
alwaysApply: false
---
---
description:概要设计模板
globs:["'*.md"]
alwaysApply:false
---
# 概要设计模板
> 概要设计术语定义

|术语|含义|示例|工程对标|数字编码
|----|----|----|----|----|
|业务流程|按照业务发生的顺序和规则表达企业实现目标的各项业务活动|商品发布流程、交易下单流程|工作流程|三位数字编码a.b.c，第一位a代表业务流程
|业务活动|企业实现目标的业务活动，指业务角色办理的业务事项，例如用户发起的一个操作|发布商品、下单|API能力（接口、MQ、Job）|三位数字编码a.b.c，第二位b代表业务活动
|业务任务|完成业务活动的工作程序，是流程的基本组成单元|查询商品详情、创建订单|领域能力|三位数字编码a.b.c，第三位c代表业务任务
|业务步骤|完成任务的具体步骤，是流程的最原子操作|校验商品状态、订单计价|领域服务处理步骤|四位数字编码a.b.c.d，第四位d代表业务步骤
|业务规则|定义或约束业务步骤的细节规则，控制或影响业务行为|商品可用才允许下单|详细的业务判断条件|五位数字编码a.b.c.d.e，第五位e代表业务规则


## 一、业务分析

### 1. 名词定义
> 定义名词，介绍名词含义和案例

|名词|含义|举例|
|-----|-----|------|
| 名词1 | 名词含义，使用场景 | 名词案例 |

### 2. 业务流程
> 表达业务流转，使用mermaid流程图，体现全流程主要节点
> 主流程每个节点均为业务流程（a一位数字编码），子流程每个节点均为业务活动（a.b两位数字编码）

#### 主流程
```mermaid
flowchart LR
    S((开始)) --> A[1 业务流程A]
    A --> B[2 业务流程B]
    B --> E((结束))
```

#### 子流程
```mermaid
flowchart LR
    S((开始)) --> A0[1.1 业务活动A]
    A0 --> A1[1.2 业务活动B]
    A1 --> E((结束))
```

### 3. 领域模型
> 采用领域驱动设计（DDD），描述核心领域对象（阐述对象类型和关键属性）及关系

|领域对象|对象类型|关键属性|
|---|---|---|
|RootAggregate|聚合根|包括ID、编码、名称、状态、关联对象、条件、扩展属性等|
|EntityA|实体|包括ID、名称、类型、关联聚合根、扩展属性等|
|ValueObjectB|值对象|包括表达式、变量、要素、分支、取值等|
|EnumC|枚举|类型编码、类型名称|

```mermaid
erDiagram
    RootAggregate }|--|| EntityA : "关系A"
    RootAggregate ||--o{ ValueObjectB : "关系B"
    EntityA ||--o{ EnumC : "枚举引用"
```

## 二、概要设计
### 1. 系统架构
> 介绍分别有那些系统，各系统的职责
- 服务划分
  - 简要描述前后端、服务、数据库等分工。
> 介绍依赖外部哪些容易
- 外部依赖
  - 简要列举外部依赖（如文件存储、MQ、外部服务等）。

> 用Mermaid C4 System图描述系统各系统及交互关系
> Person跟System的Rel用业务流程，a一位数字编码
> System之间的Rel用业务活动，a.b三位数字编码
> 业务流程、活动与业务流程图、能力定义编号保持一致

```mermaid
C4Context
    Person(user, "用户")
    System_Boundary(s1, "主系统") {
      System(sysA, "系统A", "系统A职责")
      System(sysB, "系统B", "系统B职责")
    }
    System_Boundary(s2, "外部系统") {
        System_Ext(extA, "外部A", "外部A说明")
    }
    Rel_D(user, sysA, "1.1 业务流程A")
    Rel_D(sysA, sysB, "2.1 业务流程B")
    Rel_D(sysB, extA, "3.1 外部交互")
    UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="1")
```

### 2. 职责边界
> 界定系统的职责和边界

|系统名词|主要职责|边界说明|
|---|---|---|
|系统A|系统A主要职责|系统A边界说明|
|系统B|系统B主要职责|系统B边界说明|

### 3. 能力定义
> 定义每个业务活动对应的API能力，包括对应的两位数字编码（与业务流程保持一致）
> 明确能力的归属系统、功能说明（关键出入参）、SLA协议（TPS/QPS、TP95/99 RT）

|API能力（业务活动）|归属系统|能力说明|SLA协议|
|---|---|---|---|
|1.1 能力名称|所属系统|能力概述<br/>入参：XX<br/>出参：XX|TPS 200<br/>TP95 RT 50ms<br/>TP99 RT 150ms|

### 4. 文档映射
> 建议补充主流程与详细设计文档的映射表，便于追溯

| 主流程编号 | 主流程名称| 详细设计文档 |
|------------|--------------|-----------------------|
| 1       | 业务流程A  | 1 详细设计A.md |
| 2       | 业务流程B  | 2 详细设计B.md |
