---
description: 
globs: 
alwaysApply: true
---
# 文档规范

## 代码文档规范

### Java文档注释
- 所有公共API必须有JavaDoc注释
- 包含参数说明、返回值、异常信息
- 示例：
```java
/**
 * 创建订单
 *
 * @param orderDTO 订单创建请求
 * @return 订单ID
 * @throws IllegalArgumentException 当订单参数无效时
 * @throws OrderException 当订单创建失败时
 */
public String createOrder(OrderDTO orderDTO);
```

### 类文档
- 说明类的用途和职责
- 描述重要的设计决策
- 说明使用注意事项
- 示例：
```java
/**
 * 订单领域服务
 * 
 * 负责处理订单相关的核心业务逻辑，包括：
 * 1. 订单创建
 * 2. 订单状态管理
 * 3. 订单金额计算
 * 
 * 注意：本服务是线程安全的
 */
public class OrderDomainService {
```

### 包文档
- 在package-info.java中说明包的用途
- 描述包内的主要组件
- 说明包级别的约束

## 项目文档规范

### README文件
- 项目概述
- 快速开始指南
- 环境要求
- 构建和运行说明
- 示例：
```markdown
# 项目名称

## 简介
简要说明项目的用途和主要功能

## 快速开始
1. 环境准备
2. 构建步骤
3. 运行说明

## 环境要求
- JDK 17+
- Maven 3.8+
- MySQL 8.0+
```

### 架构文档
- 系统整体架构
- 核心模块说明
- 关键流程图
- 重要设计决策

### API文档
- 使用Swagger注解
- 详细的接口说明
- 请求/响应示例
- 错误码说明

## 注释规范

### 代码注释
- 解释复杂的业务逻辑
- 说明重要的算法实现
- 标注代码的局限性
- 示例：
```java
// 使用二分查找优化性能，要求列表已排序
private int findOptimalPosition(List<Integer> sortedList, int target) {
```

### TODO注释
- 明确说明待完成的工作
- 标注优先级和负责人
- 示例：
```java
// TODO(high): 需要添加缓存机制提高性能 - @张三
```

## 版本文档

### 更新日志
- 记录版本变更内容
- 按版本号归类
- 说明重要变更
- 示例：
```markdown
## [1.1.0] - 2024-04-25
### 新增
- 支持订单批量处理
- 添加性能监控功能

### 修复
- 修复订单状态更新的并发问题
```

### 发布说明
- 版本特性说明
- 升级指南
- 兼容性说明
- 已知问题

## 运维文档

### 部署文档
- 详细的部署步骤
- 环境配置说明
- 常见问题解决

### 监控文档
- 监控指标说明
- 告警规则配置
- 问题排查指南

## 文档管理

### 文档位置
- 代码相关文档与代码一起维护
- 项目文档放在docs目录
- 使用Git进行版本控制

### 文档更新
- 及时更新文档
- 保持文档与代码同步
- 定期审查文档准确性
